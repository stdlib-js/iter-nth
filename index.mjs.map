{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isIteratorLike from '@stdlib/assert-is-iterator-like' ;\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\n\n\n// MAIN //\n\n/**\n* Returns the nth iterated value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - iteration number\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {*} nth iterated value\n*\n* @example\n* import array2iterator from '@stdlib/array-to-iterator' ;\n*\n* var it = array2iterator( [ 0, 0, 1, 0, 0 ] );\n*\n* var v = iterNth( it, 3 );\n* // returns 1\n*/\nfunction iterNth( iterator, n ) {\n\tvar i;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( '0Ce48', iterator ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( '0Ce4I', n ) );\n\t}\n\ti = 0;\n\twhile ( true ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( i === n ) {\n\t\t\treturn v.value;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterNth;\n"],"names":["iterNth","iterator","n","i","v","isIteratorLike","TypeError","format","isPositiveInteger","next","done","value"],"mappings":";;ySA8CA,SAASA,EAASC,EAAUC,GAC3B,IAAIC,EACAC,EACJ,IAAMC,EAAgBJ,GACrB,MAAM,IAAIK,UAAWC,EAAQ,QAASN,IAEvC,IAAMO,EAAmBN,GACxB,MAAM,IAAII,UAAWC,EAAQ,QAASL,IAGvC,IADAC,EAAI,IACW,CAGd,GAFAA,GAAK,GACLC,EAAIH,EAASQ,QACNC,KACN,OAED,GAAKP,IAAMD,EACV,OAAOE,EAAEO"}